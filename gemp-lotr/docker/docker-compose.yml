version: "3.4"

services:
  
  
  build:
    container_name: gemp_app_1
    build: 
      context: .
      dockerfile: gemp_app.Dockerfile
    image: gemp_app
    expose:
      - "80"
      - "8080"
    restart: always
    ports:
        # target means in the container
      - target: 80
        # published is what's on the host machine
        published: 17001
    volumes:
       - type: bind
         source: ../gemp-lotr-async/src/main/web
         target: /etc/gemp-lotr/web
       - type: bind
         source: ../../gemp-lotr
         target: /etc/gemp-lotr
       - type: bind
         source: ../gemp-lotr-async/src/main/web
         target: /var/www/localhost/htdocs/gemp-lotr #/etc/apache2/htdocs/gemp-lotr
    networks:
      gemp_net_1:
        ipv4_address: 172.28.1.2
    tty: true
    #command: nohup java -jar /etc/gemp-lotr/gemp-lotr-async/target/web.jar &


  db:
    container_name: gemp_db_1
    build: 
      context: ..
      dockerfile: docker/gemp_db.Dockerfile
    image: gemp_db
    ports:
        # target means in the container
      - target: 3306
        # published is what's on the host machine
        published: 35001
    restart: always
    volumes:
       - type: bind
         source: ../../database
         target: /var/lib/mysql
    networks:
      gemp_net_1:
        ipv4_address: 172.28.1.3
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: gemp_db
      MYSQL_USER: gempuser
      MYSQL_PASSWORD: gemppassword
      
  
networks:
  gemp_net_1:
    ipam:
      driver: default
      config:
        - subnet: 172.28.1.0/16